// Generated by CoffeeScript 1.6.3
var formatsJson, stubbableDate,
  __slice = [].slice;

formatsJson = require('../data/formats.json');

stubbableDate = require('./stubbable_date');

module.exports = function(moment) {
  var geomoment, key, tzid, val, zone, zones, _fn, _ref;
  geomoment = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return moment.apply(null, args);
  };
  for (key in moment) {
    val = moment[key];
    geomoment[key] = val;
  }
  geomoment.tz = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return moment.tz.apply(null, args);
  };
  _ref = moment.tz;
  for (key in _ref) {
    val = _ref[key];
    geomoment.tz[key] = val;
  }
  geomoment.formats = formatsJson;
  geomoment.day = function(day, tzid) {
    var formats;
    formats = geomoment.formats;
    return moment.tz(day, [formats.day, formats.iCalDay, formats.slashDay], tzid);
  };
  geomoment.fn.dayString = function() {
    return this.format(geomoment.formats.day);
  };
  zones = {
    eastern: 'America/New_York',
    central: 'America/Chicago',
    mountain: 'America/Denver',
    pacific: 'America/Los_Angeles'
  };
  _fn = function(zone, tzid) {
    geomoment[zone] = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      args.push(tzid);
      return geomoment.tz.apply(this, args);
    };
    return geomoment[zone].tzid = tzid;
  };
  for (zone in zones) {
    tzid = zones[zone];
    _fn(zone, tzid);
  }
  geomoment.stubTime = function(time) {
    return stubbableDate.stubTime(moment(time).toDate());
  };
  geomoment.restoreTime = stubbableDate.restoreTime;
  return geomoment;
};
